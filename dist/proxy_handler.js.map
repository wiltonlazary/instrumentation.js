{"version":3,"sources":["../src/proxy_handler.ts"],"names":[],"mappings":"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","file":"proxy_handler.js","sourcesContent":["export const loggerObserver = {\n    notify: (value: any, oldValue: any, operation: string, path: Array<PropertyKey>) => {\n        console.log(`loggerObserver.notify: operation=\"${operation}\" path=${JSON.stringify(path.join('.'))} oldValue=${JSON.stringify(oldValue)} value=${JSON.stringify(value)}`)\n    }\n}\n\nconst booleanTruePropertyDefinition = {\n    get: function () { return true },\n    enumerable: false,\n    configurable: false\n}\n\nexport class ProxyHandler<T extends object> implements ProxyHandler<T> {\n    observerIsMap = false\n\n    static create(backing: any, observer: any = null, propertyKey: PropertyKey = null): any {\n        const proxyHandler = new ProxyHandler(backing, observer, propertyKey)\n        const value = new Proxy(backing, new ProxyHandler(backing, observer, propertyKey))\n        Object.defineProperty(value, 'isProxy', booleanTruePropertyDefinition)\n\n        Object.defineProperty(value, 'proxyHandler', {\n            get: function () { return proxyHandler },\n            enumerable: false,\n            configurable: false\n        })\n\n        return value\n    }\n\n    constructor(public readonly backing: any, public observer: any, public propertyKey: PropertyKey) {\n        this.observerIsMap = observer instanceof Map\n    }\n\n    get isProxyHandler(): boolean {\n        return true\n    }\n\n    addObserver(observer: any, propertyKey: PropertyKey) {\n        if (!this.observer) {\n            this.observer = observer\n            this.propertyKey = propertyKey\n        } else if (this.observerIsMap) {\n            this.observer.set(observer, propertyKey)\n        } else if (this.observer !== observer) {\n            this.observer = new Map([this.observer, this.propertyKey])\n            this.observerIsMap = true\n            this.propertyKey = null\n        }\n    }\n\n    removeObserver(observer: any) {\n        if (this.observerIsMap) {\n            this.observer.delete(observer)\n\n            if (this.observer.size === 1) {\n                this.observerIsMap = false\n                const map = this.observer\n\n                this.observer.forEach((propertyKey, element) => {\n                    this.observer = element\n                    this.propertyKey = propertyKey\n                })\n\n                map.clear()\n            } else if (this.observer.size === 0) {\n                this.observerIsMap = false\n                this.observer = null\n                this.propertyKey = null\n            }\n        } else if (this.observer === observer) {\n            this.observer = null\n            this.propertyKey = null\n        }\n    }\n\n    notify(value: any, oldValue: any, operation: string, path: Array<PropertyKey>) {\n        if (!!this.observer) {\n            if (this.observerIsMap) {\n                this.observer.forEach((propertyKey, element) => {\n                    path.unshift(propertyKey)\n                    element.notify(value, oldValue, operation, path)\n                    path.shift()\n                })\n            } else {\n                path.unshift(this.propertyKey)\n                this.observer.notify(value, oldValue, operation, path)\n            }\n        }\n    }\n\n    get(target: T, p: PropertyKey, receiver: any): any {\n        let value = this.backing[p]\n\n        if (!(value instanceof Object) || value.isProxy || value.isProxyHandler) {\n            return value\n        } else {\n            value = ProxyHandler.create(value, this, p)\n            this.backing[p] = value\n            return value\n        }\n    }\n\n    set(target: T, p: PropertyKey, value: any, receiver: any): boolean {\n        const oldValue = this.backing[p]\n        this.backing[p] = value\n        this.notify(value, oldValue, 'set', [p])\n        return true\n    }\n\n    deleteProperty(target: T, p: PropertyKey): boolean {\n        const oldValue = this.backing[p]\n        delete this.backing[p]\n        this.notify(undefined, oldValue, 'delete', [p])\n        return true\n    }\n}\n\n//----------------------------------------------------------------------------------//\ndeclare const global: any\nglobal.ProxyHandler = ProxyHandler\n"]}