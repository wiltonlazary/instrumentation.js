{"version":3,"sources":["../src/test.ts"],"names":[],"mappings":"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","file":"test.js","sourcesContent":["import './index'\n\nclass Person {\n    name: string = 'original name'\n    age: number = 40\n    data: any\n}\n\nclass Test {\n    arr1: any = [{ a1: 'aa22' }]\n    map1 = new Map()\n    _obj1: any = [{ p1: 'z1z1' }]\n\n    get obj1() {\n        return this._obj1\n    }\n\n    set obj1(value) {\n        this._obj1 = value\n    }\n\n    message(value) {\n        console.log(`message: value=${JSON.stringify(value)}`)\n    }\n\n    fire(value) {\n        console.log(`fire: value=${JSON.stringify(value)}`)\n    }\n}\n\nconst test = new Test() as any\n\n// Data binding\ntest.bindOut([\n    ['obj1.x.y/.*', test, 'message'],\n    ['obj1.name', test, 'message'],\n    ['obj1.data/.*', (value, detail) => {\n        console.log('bindOut detail content:', JSON.stringify(detail.content))\n    }],\n    ['arr1.*/.*', (value, detail) => {\n        console.log('bindOut detail content:', JSON.stringify(detail.content))\n    }],\n    ['map1.*/.*', (value, detail) => {\n        console.log('bindOut detail content:', JSON.stringify(detail.content))\n    }],\n    ['fire', (value, detail) => {\n        console.log('bindOut detail content:', JSON.stringify(detail.content))\n    }]\n])\n\ntest.bindIn([\n    [test, 'obj1.data/.*', (value, detail) => {\n        console.log('bindIn detail content:', JSON.stringify(detail.content))\n    }]\n])\n\n// Function binding tests\ntest.fire('function binding test')\n//------------------------------------//\n\n// // Array deep data binding tests\n// test.arr1.push('xxx-xxx')\n// test.arr1[0].name1 = 'xx'\n// //------------------------------------//\n\n// // Map deep data binding tests\n// test.map1.set('name', 'wilton lazary')\n// test.map1.set('data1', {})\n\n// test.map1.forEach((value, key) => {\n//     console.log(`key:${key} value:${value}`)\n\n//     if(value instanceof Object){\n//         value.bzbz = 4\n//     }\n// })\n\n// test.map1.delete('data1')\n// test.map1.clear()\n// //------------------------------------//\n\n// // Object deep data binding tests\n// test.obj1 = { x: { y: { z: 1 } } }\n// test.obj1.x.y.z = {}\n// test.obj1.x.y = 10\n// delete test.obj1.x\n// test.obj1 = new Person()\n// test.obj1.name = 'new name'\n// test.obj1.data = { count: 1, content: '---' }\n// test.obj1.data.content = { type: 'new_content' }\n// //------------------------------------//\n"]}