{"version":3,"sources":["../src/instrumentation.ts"],"names":[],"mappings":"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","file":"instrumentation.js","sourcesContent":["import { Binder, BinderDispatchDetail, DispatchOperation, BinderConsumerType } from './binder'\nimport { ProxyHandler } from './proxy_handler'\n\nexport type PropertyCallTypeDetail = [PropertyCallType, any]\n\nconst prototypeInstrumented = new Map<any, Map<any, PropertyCallTypeDetail>>()\nconst propertyCallTypeFromPrototypeCache = new Map<any, Map<any, PropertyCallTypeDetail>>()\nconst binderInstrumented = new Map<any, Map<any, PropertyCallTypeDetail>>()\n\nexport const ABORT_ACTION = { toString: () => 'ABORT_ACTION' }\n\nexport type PropertyCallType = 'none' | 'function' | 'setter' | 'ownSetter'\n\nexport type BindOutParamsType = Array<\n    [string, (value: any, detai: BinderDispatchDetail) => any] |\n    [string, (value: any, detai: BinderDispatchDetail) => any, boolean] |\n    [string, any, string] |\n    [string, any, string, boolean]\n    >\n\nexport type BindInParamsType = Array<\n    [any, string, (value: any, detai: BinderDispatchDetail) => any] |\n    [any, string, (value: any, detai: BinderDispatchDetail) => any, boolean] |\n    [any, string, string] |\n    [any, string, string, boolean]\n    >\n\nexport interface PropertyDescriptorPrototype {\n    propertyKey: string\n    descriptor: PropertyDescriptor\n    prototype: any\n}\n\nexport function getHeadPrototype(prototype: any): any {\n    let nextPrototype = prototype\n\n    do {\n        prototype = nextPrototype\n        nextPrototype = Object.getPrototypeOf(prototype)\n    } while (!!nextPrototype)\n\n    return prototype\n}\n\nexport function getHeadPrototypeFromInstance(instance: any): any {\n    return getHeadPrototype(instance.constructor.prototype)\n}\n\nexport function getPropertyDescriptorPrototype(prototype: any, propertyKey: string): PropertyDescriptorPrototype {\n    let nextPrototype = prototype\n    let descriptor: any = null\n\n    do {\n        prototype = nextPrototype\n        descriptor = Object.getOwnPropertyDescriptor(prototype, propertyKey)\n        nextPrototype = Object.getPrototypeOf(prototype)\n    } while (descriptor === undefined && !!nextPrototype)\n\n    return descriptor === undefined ? undefined : {\n        propertyKey: propertyKey,\n        descriptor: descriptor,\n        prototype: prototype\n    }\n}\n\nexport function getPropertyDescriptorPrototypeFromInstance(instance: any, propertyKey: string): PropertyDescriptorPrototype {\n    return getPropertyDescriptorPrototype(instance.constructor.prototype, propertyKey)\n}\n\nexport function getPropertyCallTypeFromPrototype(prototype, propertyKey: string): PropertyCallTypeDetail {\n    let result: PropertyCallTypeDetail = ['none', null]\n\n    if (!propertyCallTypeFromPrototypeCache.has(prototype) || !propertyCallTypeFromPrototypeCache.get(prototype).has(propertyKey)) {\n        let registeredMap: Map<any, PropertyCallTypeDetail> = propertyCallTypeFromPrototypeCache.get(prototype)\n\n        if (!registeredMap) {\n            registeredMap = new Map()\n            propertyCallTypeFromPrototypeCache.set(prototype, registeredMap)\n        }\n\n        const propertyDescriptorPrototype = getPropertyDescriptorPrototype(prototype, propertyKey)\n\n        if (propertyDescriptorPrototype !== undefined) {\n            result = propertyDescriptorPrototype.descriptor.set !== undefined ?\n                ['setter', propertyDescriptorPrototype.descriptor] : ['function', propertyDescriptorPrototype.descriptor]\n        }\n\n        registeredMap.set(propertyKey, result)\n    } else {\n        result = propertyCallTypeFromPrototypeCache.get(prototype).get(propertyKey) as any\n    }\n\n    return result\n}\n\nexport function getPropertyCallTypeFromPrototypeFromInstance(instance, propertyKey: string): PropertyCallTypeDetail {\n    return getPropertyCallTypeFromPrototype(instance.constructor.prototype, propertyKey)\n}\n\nexport function valueFromPath(object, path: Array<string>): any {\n    if (object instanceof Object) {\n        let current = object\n\n        path.forEach((element, index) => {\n            current = current[element]\n\n            if (!(current instanceof Object)) {\n                if (index < path.length - 1) {\n                    current = undefined\n                }\n\n                return\n            }\n        })\n\n        return current\n    } else {\n        return undefined\n    }\n}\n\n\nexport class Instrumentation {\n    deepBy: Map<string, Set<Binder>> = null\n    ownInstrumented: Map<string, PropertyCallTypeDetail> = null\n    outBinders: Map<string, Set<Binder>> = null\n    inBinders: Map<string, Set<Binder>> = null\n\n    constructor(\n        public readonly owner: any\n    ) {\n\n    }\n\n    clear() {\n        if (this.outBinders !== null) {\n            this.outBinders.forEach(element => {\n                element.forEach(binder => {\n                    binder.dispose()\n                })\n\n                element.clear()\n            })\n        }\n\n        if (this.inBinders !== null) {\n            this.inBinders.forEach(element => {\n                element.forEach(binder => {\n                    binder.dispose()\n                })\n\n                element.clear()\n            })\n        }\n    }\n\n    dispose() {\n        this.clear()\n    }\n\n    addDeepBy(binder: Binder) {\n        if (!this.deepBy) {\n            this.deepBy = new Map()\n        }\n\n        let binderSet = this.deepBy.get(binder.producerPropertyKey)\n\n        if (!binderSet) {\n            binderSet = new Set()\n            this.deepBy.set(binder.producerPropertyKey, binderSet)\n        }\n\n        binderSet.add(binder)\n    }\n\n    removeDeepBy(binder: Binder) {\n        let binderSet = this.deepBy.get(binder.producerPropertyKey)\n\n        if (binderSet) {\n            binderSet.delete(binder)\n\n            if (binderSet.size === 0) {\n                this.deepBy.delete(binder.producerPropertyKey)\n\n                if (this.deepBy.size === 0) {\n                    this.deepBy = null\n                }\n            }\n        }\n    }\n\n    defineOwnProperty(propertyKey: string): [PropertyCallType, PropertyDescriptor] {\n        let backingProperty = this.owner[propertyKey]\n        delete this.owner[propertyKey]\n\n        const backingPropertyDescriptor: PropertyDescriptor = {\n            get: function () {\n                return backingProperty\n            },\n            set: function (value) {\n                backingProperty = value\n            },\n            enumerable: false,\n            configurable: false\n        }\n\n        Object.defineProperty(this.owner, propertyKey, {\n            get: function () {\n                return backingProperty\n            },\n            set: function (value) {\n                const instrumentation = this.instrumentation\n                let newValue = value\n\n                if (value instanceof Object && instrumentation.deepBy && instrumentation.deepBy.has(propertyKey)) {\n                    if (value.isProxy) {\n                        if (value.observer !== instrumentation) {\n                            value.addObserver(instrumentation, propertyKey)\n                        }\n                    } else {\n                        newValue = ProxyHandler.create(value, instrumentation, propertyKey)\n                    }\n                }\n\n                this.instrumentation.notify(\n                    newValue, backingProperty, 'set', [propertyKey],\n                    [(value) => { backingProperty = value }, this]\n                )\n            },\n            enumerable: true,\n            configurable: false\n        })\n\n        return ['ownSetter', backingPropertyDescriptor]\n    }\n\n    ensureIntrumentation(propertyKey: string): PropertyCallTypeDetail {\n        const ownerPrototype = this.owner.constructor.prototype\n        let result: PropertyCallTypeDetail = ['none', null]\n\n        if (this.ownInstrumented !== null && this.ownInstrumented.has(propertyKey)) {\n            result = this.ownInstrumented.get(propertyKey)\n        } else if (!binderInstrumented.has(ownerPrototype) || !binderInstrumented.get(ownerPrototype).has(propertyKey)) {\n            if (Object.getOwnPropertyDescriptor(this.owner, propertyKey) !== undefined) {\n                result = this.defineOwnProperty(propertyKey)\n\n                if (this.ownInstrumented === null) {\n                    this.ownInstrumented = new Map()\n                }\n\n                this.ownInstrumented.set(propertyKey, result)\n            } else {\n                let binderRegisteredMap: Map<any, PropertyCallTypeDetail> = binderInstrumented.get(ownerPrototype)\n\n                if (!binderRegisteredMap) {\n                    binderRegisteredMap = new Map()\n                    binderInstrumented.set(ownerPrototype, binderRegisteredMap)\n                }\n\n                const propertyDescriptorPrototype = getPropertyDescriptorPrototype(ownerPrototype, propertyKey)\n\n                if (!propertyDescriptorPrototype) {\n                    throw new Error(`Property key not found on owner prototype: ${propertyKey}`)\n                } else if (\n                    !prototypeInstrumented.has(propertyDescriptorPrototype.prototype) ||\n                    !prototypeInstrumented.get(propertyDescriptorPrototype.prototype).has(propertyKey)\n                ) {\n                    let prototypeRegisteredMap: Map<any, PropertyCallTypeDetail> = prototypeInstrumented.get(propertyDescriptorPrototype.prototype)\n\n                    if (!prototypeRegisteredMap) {\n                        prototypeRegisteredMap = new Map()\n                        prototypeInstrumented.set(propertyDescriptorPrototype.prototype, prototypeRegisteredMap)\n                    }\n\n                    result = this.observed(propertyDescriptorPrototype)\n                    prototypeRegisteredMap.set(propertyKey, result)\n                } else {\n                    result = prototypeInstrumented.get(propertyDescriptorPrototype.prototype).get(propertyKey) as any\n                }\n\n                binderRegisteredMap.set(propertyKey, result)\n            }\n        } else {\n            result = binderInstrumented.get(ownerPrototype).get(propertyKey) as any\n        }\n\n        return result\n    }\n\n    observed(propertyDescriptorPrototype: PropertyDescriptorPrototype): PropertyCallTypeDetail {\n        if (typeof propertyDescriptorPrototype.descriptor.value === 'function') {\n            const originalMethod = propertyDescriptorPrototype.descriptor.value\n            delete propertyDescriptorPrototype.prototype[propertyDescriptorPrototype.propertyKey]\n\n            propertyDescriptorPrototype.prototype[propertyDescriptorPrototype.propertyKey] = function () {\n                const value = arguments\n\n                this.instrumentation.notify(\n                    value, undefined, 'call', [propertyDescriptorPrototype.propertyKey],\n                    [(value) => { return originalMethod.apply(this, value) }, this]\n                )\n            }\n\n            return ['function', originalMethod]\n        } else if (propertyDescriptorPrototype.descriptor.set !== undefined) {\n            const originalDescriptor = propertyDescriptorPrototype.descriptor\n\n            Object.defineProperty(propertyDescriptorPrototype.prototype, propertyDescriptorPrototype.propertyKey, {\n                get: originalDescriptor.get,\n                set: function (value) {\n                    const instrumentation = this.instrumentation\n                    let newValue = value\n\n                    if (value instanceof Object && instrumentation.deepBy && instrumentation.deepBy.has(propertyDescriptorPrototype.propertyKey)) {\n                        if (value.isProxy) {\n                            if (value.observer !== instrumentation) {\n                                value.addObserver(instrumentation, propertyDescriptorPrototype.propertyKey)\n                            }\n                        } else {\n                            newValue = ProxyHandler.create(value, instrumentation, propertyDescriptorPrototype.propertyKey)\n                        }\n                    }\n\n                    this.instrumentation.notify(\n                        newValue, originalDescriptor.get(), 'set', [propertyDescriptorPrototype.propertyKey],\n                        [(value) => { originalDescriptor.set.call(this, value) }, this]\n                    )\n                },\n                enumerable: originalDescriptor.enumerable,\n                configurable: originalDescriptor.configurable\n            })\n\n            return ['setter', originalDescriptor]\n        } else {\n            return ['none', null]\n        }\n    }\n\n    bindOut(key: string, consumer: any | ((any, Binder) => any), consumerPropertyKey?: string, active?: boolean): Binder {\n        if (this.outBinders === null) {\n            this.outBinders = new Map()\n        }\n\n        let producerPropertyKey = key\n        let producerPropertyKeyPath = key\n        let producerPropertyKeyPathRegExp = null\n        let deep = false\n\n        if (key.indexOf('/') >= 0) {\n            deep = true\n            const indexOfSep = key.indexOf('/')\n            producerPropertyKeyPath = key.substring(0, indexOfSep)\n            producerPropertyKey = producerPropertyKeyPath\n            const regExpStr = key.substr(indexOfSep + 1)\n            const indexOfSecSep = regExpStr.indexOf('/')\n\n            if (indexOfSecSep >= 0) {\n                producerPropertyKeyPathRegExp = new RegExp(regExpStr.substring(0, indexOfSecSep), regExpStr.substr(indexOfSep + 1))\n            } else {\n                producerPropertyKeyPathRegExp = new RegExp(regExpStr)\n            }\n        }\n\n        if (producerPropertyKey.indexOf('.') >= 0) {\n            deep = true\n            producerPropertyKey = producerPropertyKey.substring(0, producerPropertyKey.indexOf('.'))\n        }\n\n        const producerPropertyCallTypeDetail = this.ensureIntrumentation(producerPropertyKey)\n\n        const binder = new Binder(\n            this, this.owner, producerPropertyKey, producerPropertyKeyPath,\n            producerPropertyKeyPath.split('.'), producerPropertyKeyPathRegExp,\n            producerPropertyCallTypeDetail, consumer, consumerPropertyKey,\n            !consumerPropertyKey ? 'none' : getPropertyCallTypeFromPrototypeFromInstance(consumer, consumerPropertyKey)[0],\n            deep, active === undefined ? true : active\n        )\n\n        let bindersLocal = this.outBinders.get(producerPropertyKey)\n\n        if (bindersLocal === undefined) {\n            bindersLocal = new Set()\n            this.outBinders.set(producerPropertyKey, bindersLocal)\n        }\n\n        bindersLocal.add(binder)\n\n        if (consumerPropertyKey !== undefined && typeof consumer !== 'function') {\n            consumer.instrumentation.bindIn(binder)\n        }\n\n        if (binder.deep) {\n            this.addDeepBy(binder)\n\n            switch (producerPropertyCallTypeDetail[0]) {\n                case 'ownSetter': {\n                    const descriptor = producerPropertyCallTypeDetail[1]\n                    const value = descriptor.get()\n\n                    if (value.isProxy) {\n                        if (value.observer !== this) {\n                            value.addObserver(this, producerPropertyKey)\n                        }\n                    } else {\n                        descriptor.set(ProxyHandler.create(value, this, producerPropertyKey))\n                    }\n                } break\n                case 'setter': {\n                    const descriptor = producerPropertyCallTypeDetail[1]\n                    const value = descriptor.get.call(this.owner)\n\n                    if (value.isProxy) {\n                        if (value.observer !== this) {\n                            value.addObserver(this, producerPropertyKey)\n                        }\n                    } else {\n                        descriptor.set.call(this.owner, ProxyHandler.create(value, this, producerPropertyKey))\n                    }\n                } break\n            }\n        }\n\n        return binder\n    }\n\n    bindIn(binder: Binder): Binder {\n        if (this.inBinders === null) {\n            this.inBinders = new Map()\n        }\n\n        let bindersLocal = this.inBinders.get(binder.consumerPropertyKey)\n\n        if (bindersLocal === undefined) {\n            bindersLocal = new Set()\n            this.inBinders.set(binder.consumerPropertyKey, bindersLocal)\n        }\n\n        bindersLocal.add(binder)\n        binder.inInstrumentation = this\n        return binder\n    }\n\n    unbindOut(binder: Binder) {\n        const bindersLocal = this.outBinders.get(binder.producerPropertyKey)\n        bindersLocal.delete(binder)\n\n        if (bindersLocal.size === 0) {\n            this.outBinders.delete(binder.producerPropertyKey)\n\n            if (this.outBinders.size === 0) {\n                this.outBinders = null\n            }\n        }\n\n        if (binder.deep) {\n            this.removeDeepBy(binder)\n        }\n    }\n\n    unbindIn(binder: Binder) {\n        const bindersLocal = this.inBinders.get(binder.consumerPropertyKey)\n        bindersLocal.delete(binder)\n\n        if (bindersLocal.size === 0) {\n            this.inBinders.delete(binder.consumerPropertyKey)\n\n            if (this.inBinders.size === 0) {\n                this.inBinders = null\n            }\n        }\n    }\n\n    notify(value: any, oldValue: any, operation: DispatchOperation, path: Array<string>, execute?: [(value) => any, any]): any {\n        if (this.outBinders !== null) {\n            const propertyKey = path[0].toString()\n            let abortAction = false\n            const bindersByKey = this.outBinders.get(propertyKey)\n\n            if (bindersByKey !== undefined) {\n                const pathStr = path.join('.')\n                const pathToMatch = path.slice(1).join('.')\n\n                bindersByKey.forEach(binder => {\n                    if (binder.active) {\n                        if (binder.producerPropertyKeyPath == pathStr) {\n                            if (binder.dispatch(value, oldValue, operation, path, '=') === ABORT_ACTION) {\n                                abortAction = true\n                                return\n                            }\n                        } else if (binder.producerPropertyKeyPathParts.slice(0, binder.producerPropertyKeyPathParts.length - 1).join('.').startsWith(pathStr)) {\n                            if (binder.dispatch(value, oldValue, operation, path, '<') === ABORT_ACTION) {\n                                abortAction = true\n                                return\n                            }\n                        } else if (\n                            path.length > binder.producerPropertyKeyPathParts.length &&\n                            binder.producerPropertyKeyPathRegExp &&\n                            binder.producerPropertyKeyPathRegExp.exec(path.slice(binder.producerPropertyKeyPathParts.length).join('.'))\n                        ) {\n                            if (binder.dispatch(value, oldValue, operation, path, '>') === ABORT_ACTION) {\n                                abortAction = true\n                                return\n                            }\n                        }\n                    }\n                })\n            }\n\n            if (!abortAction && !!execute) {\n                return execute[0].call(execute[1], value)\n            } else {\n                return undefined\n            }\n        } else if (!!execute) {\n            return execute[0].call(execute[1], value)\n        }\n    }\n}\n "]}